<?xml version="1.0" encoding="utf-8" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>blog\hrgruri</title>
<link href="https://hrgruri.github.io"></link>
<updated>2016-06-12T07:13:33+09:00</updated>
<id>urn:uuid:1deced78-1925-4a0a-6b37-d3e39e3b7725</id>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>立命館の学年暦をスクレイピング</title>
<link href="/article/2016/06/ritsucal"></link>
<id>urn:uuid:abcf6d60-63c0-0d97-5c32-e586805ea753</id>
<updated>2016-06-11T18:42:03+09:00</updated>
<summary type="html"><![CDATA[<h1>ritsucal</h1>
<p>ritsucalは立命館大学･大学院の学年暦をスクレイピングするPHPのライブラリです. 前から作っていて<a href="https://github.com/hrgruri/ritsucal">GitHub</a>にあげていましたが,久しぶりに見るとREADME.mdに変な文字が混ざっていたので,いくつか修正して,そのついでに簡単な使い方を書きます.</p>
<h2>インストール</h2>
<p>インストールはcomposerからできます</p>
<pre><code class="language-sh">composer require hrgruri/ritsucal
</code></pre>
<h2>使い方</h2>
<pre><code class="language-php">&lt;?php
require 'vendor/autoload.php';
try {
    $client = new Hrgruri\Ritsucal\Client();
    $calenders = $client-&gt;getCalenders();
    var_dump($calenders);
} catch (\Hrgruri\Ritsucal\Exception\UrlException $e) {
    print "Error\n";
}
</code></pre>
<p>こんな感じでコードを書くと動きます. 得られるのは以下の学年暦.  </p>
<ol>
<li><p>2016年度　立命館大学　学年暦</p>
</li>
<li><p>2016年度　立命館大学大学院　学年暦 セメスター制
  （法学研究科、経済学研究科、経営学研究科、社会学研究科、文学研究科、国際関係研究科、政策科学研究科、応用人間科学研究科、言語教育情報研究科、公務研究科、スポーツ健康科学研究科、映像研究科、先端総合学術研究科）</p>
</li>
<li><p>2016年度　立命館大学大学院　学年暦 セメスター制
  （理工学研究科、情報理工学研究科、生命科学研究科、薬学研究科）</p>
</li>
<li><p>2016年度　立命館大学大学院　学年暦 セッション制
（テクノロジー・マネジメント研究科、経営管理研究科）</p>
</li>
<li><p>2016年度　立命館大学大学院　学年暦
  （法務研究科）</p>
</li>
</ol>
<p>var_dump()した結果の一部です</p>
<pre><code>array(5) {
  [0]=&gt;
  object(Hrgruri\Ritsucal\Calender)#66 (2) {
    ["title"]=&gt;
    string(40) "2016年度　立命館大学　学年暦"
    ["events"]=&gt;
    array(79) {
      [0]=&gt;
      object(Hrgruri\Ritsucal\Event)#111 (4) {
        ["year"]=&gt;
        int(2016)
        ["month"]=&gt;
        int(4)
        ["day"]=&gt;
        int(1)
        ["title"]=&gt;
        string(27) "前期セメスター開始"
      }
      [1]=&gt;
      object(Hrgruri\Ritsucal\Event)#65 (4) {
        ["year"]=&gt;
        int(2016)
        ["month"]=&gt;
        int(4)
        ["day"]=&gt;
        int(1)
        ["title"]=&gt;
        string(27) "オリエンテーション"
      }
</code></pre>
<p>デフォルトでは <a href="http://www.ritsumei.ac.jp/profile/info/calender/">http://www.ritsumei.ac.jp/profile/info/calender/</a> から情報を取ってきますが,</p>
<pre><code class="language-php">$calenders = $client-&gt;getCalenders('http://www.ritsumei.ac.jp/profile/info/calender/2016/');
</code></pre>
<p>などのようにすると別の年度の学年暦を取ってくることができます.</p>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>Saori v0.5を作った</title>
<link href="/article/2016/06/102235"></link>
<id>urn:uuid:65a453e3-79a3-ccbd-085a-bc8729a31881</id>
<updated>2016-06-10T22:35:58+09:00</updated>
<summary type="html"><![CDATA[<p>Saori v0.5.0をリリースした. これで簡単にユーザが新たなページを生成することができるようになった. そして,<a href="http://hrgruri.github.io/article/2016/06/042227/">前の記事</a>で言っていたテーブルがおかしい理由はテーブルのCSSが記述されていなかったからでした. ボーダの設定を指定なかったので,枠線がない状態で出力されていただけでした.</p>
<hr />
<p>そろそろv0.x系をやめてv1.0にしてもいい頃かもしれない. 最初に思っていた必要な最低限の機能はできたと思う.<br />
それとちゃんとした使い方をまとめて記事かページを生成する必要がある. 今のところ他の人が使うのには不親切だ. README.mdには記事の編集のことしか記述していない. (誰か作る人がいるのかわからないが)テーマの作り方やユーザページについてなど. こういったものをまとめ終えたらv1.0.0にしたいと思います.</p>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>Saori v0.5.x-devにてTableがおかしい</title>
<link href="/article/2016/06/042227"></link>
<id>urn:uuid:34a591c2-3e2d-b7f2-4ee6-8c45e35f7a42</id>
<updated>2016-06-04T22:27:39+09:00</updated>
<summary type="html"><![CDATA[<p>現在Saoriのv0.5を作っていますが, どうやらテーブルが正しく表示されないです.</p>
<pre><code class="language-markdown">|name|値|
|:-:|:-:|
|f85|キーワード|
|f23|絵師|
|f83|画題|
</code></pre>
<p>上記の記述をしたら以下の様なテーブルが生成されました.</p>
<p><img src="/article/2016/06/042227/table.png" alt="" /></p>
<p>罫線が入っていないので,テーブルとしてわかりにくくなっています. 今のところ原因がわかっていません. Atomの上では正しく表示されているので記述に間違いはないのではないかとは思います. cebe/markdownを使ってMarkdownを変換しています. とりあえず他のライブラリを使ってみてどう表示されるのか試してみます. あとHTMLも確認してみたいと思います.</p>
<p>ちなみにv0.5.x-devでは記事とユーザページ(contents/page/NAME.md)の画像ファイルのパスの書き換えはできるようになりました. </p>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>立命館ARCのスクレイピング</title>
<link href="/article/2016/06/arc"></link>
<id>urn:uuid:aeac6c74-1a6f-a261-d81d-872fb3ee9355</id>
<updated>2016-06-02T21:12:11+09:00</updated>
<summary type="html"><![CDATA[<h1>PHPでスクレイピング</h1>
<p>創成3では立命館大学アート・リサーチセンター(以下ARC)のアクセスログを使って資料の推薦を行うことが目的でした. 最初はリンクだけを使った質素なものを作る予定でしたが, 途中でスクレイピングをして, サイト内だけで簡単な検索･閲覧をできるようにすることになりました. PHPを使ってやったのですが,これがとっても大変でした.</p>
<h2>謎のname</h2>
<p>HTMLのFormのほとんどにはname属性がつけられています.</p>
<pre><code class="language-html">&lt;input type="text" name="username"&gt;
</code></pre>
<p>nameからどういった値が入るのか推測できるようになっているべきです.上の例だとユーザ名が入るのだと推測できます. しかしながらARCのフォームでは全くそれがなされていなかった.</p>
<h3>浮世絵データベース</h3>
<table>
<thead>
<tr><th align="center">name</th><th align="center">値</th></tr>
</thead>
<tbody>
<tr><td align="center">f85</td><td align="center">キーワード</td></tr>
<tr><td align="center">f23</td><td align="center">絵師</td></tr>
<tr><td align="center">f83</td><td align="center">画題</td></tr>
</tbody>
</table>
<h3>古典籍データベース</h3>
<table>
<thead>
<tr><th align="center">name</th><th align="center">値</th></tr>
</thead>
<tbody>
<tr><td align="center">f61</td><td align="center">資料名</td></tr>
<tr><td align="center">f63</td><td align="center">編著者</td></tr>
</tbody>
</table>
<p>まったく謎です. ちなみに浮世絵DBの絵師であるf23ですが,古典籍DBでは資料のソート(成立月日順)のために使われています.
ちなみに統一されているものも一応あります.</p>
<table>
<thead>
<tr><th align="center">name</th><th align="center">値</th></tr>
</thead>
<tbody>
<tr><td align="center">-max</td><td align="center">表示件数</td></tr>
<tr><td align="center">skip</td><td align="center">スキップ数</td></tr>
</tbody>
</table>
<p>この2つは推測できますね. なぜかmaxではなく-maxですが. 統一されておらず,推測できないのはスクレイピングする側としては辛いですね. サーバサイドのコードを書くに扱いづらくなかったのでしょうか?</p>
<h2>作ったライブラリ</h2>
<p>オープンキャンパスのために創成3のサイトを再び作っているので使っているが, それさえ終わればもう使うことはないと思う. <a href="https://github.com/hrgruri/rarcs">GitHub</a>にアップロードしています. またComposerからインストールして使うことができます.</p>
<pre><code class="language-sh">composer require hrgruri/rarcs
</code></pre>
<pre><code class="language-php">&lt;?php
require 'vendor/autoload.php';

$client = new Hrgruri\Rarcs\NishikieClient();
var_dump($client-&gt;getDetail('arcUP2435'));
/*
object(Hrgruri\Rarcs\Asset\Nishikie)#51 (5) {
  ["artist"]=&gt;
  string(6) "広貞"
  ["id"]=&gt;
  string(9) "arcUP2435"
  ["url"]=&gt;
  string(62) "http://www.dh-jac.net/db/nishikie/results-big.php?f1=arcUP2435"
  ["title"]=&gt;
  string(54) "「菅原　三ノ口」「松王丸」「梅王丸」"
  ["cover"]=&gt;
  string(87) "http://www.arc.ritsumei.ac.jp/archive01/theater/image/PB/arc/Prints/arcUP/arcUP2435.jpg"
}
 */
</code></pre>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>Saori v0.4.0を作りました</title>
<link href="/article/2016/05/301402"></link>
<id>urn:uuid:0d67959e-4782-4b3a-ff12-614f7faba226</id>
<updated>2016-05-30T14:02:18+09:00</updated>
<summary type="html"><![CDATA[<p>v0.4.0での変更点は</p>
<ul>
<li>Twigファイルの場所の変更</li>
<li>config.jsonの場所を変更</li>
<li>ユーザページの生成機能</li>
</ul>
<h2>Twigファイルの場所の変更について</h2>
<p>Twigファイルの場所をtheme/:theme_name/twig/にしました. サイトを生成するのに必要なテンプレートはtemplate内に置きました.これからはsaoriが直接呼び出すTwigファイルはここにおいていこうと思います.  </p>
<h2>config.jsonの場所を変更について</h2>
<p>contentsディレクトリ内にconfig.jsonを設置するように変更しました. 何故したかというと,config.jsonもgitで管理しやすくするためです.</p>
<h2>ユーザページの生成機能について</h2>
<p>それと<a href="/article/2016/04/261251/">前に言ってた</a>,ユーザがMarkdownファイルを作るだけでページを生成できるようにしました. 例えば,contents/page/about.mdというファイルを作るとtemplate/page.twigを利用して,/about/index.htmlが作られます. しかしこれだと画像が扱えない(作ってから気づいた)ので,v0.5では画像をどこかにコピーしてMarkdownファイル内にある画像のパスをそこに書き換えようかな思います.</p>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>icd3</title>
<link href="/article/2016/04/icd3"></link>
<id>urn:uuid:506a45d2-9b63-127f-d54e-0f30184aaa72</id>
<updated>2016-04-29T23:40:52+09:00</updated>
<summary type="html"><![CDATA[<p>先生｢創成3で作ってもらったサイトをオープンキャンパスで見せようと思う｣<br />
私｢あっ,はい. ちゃんとしたコードに直したかったので, 修正したら渡します｣<br />
先生｢それなんだけどね, 今のままだと書籍だけで見た感じが微妙だから絵も推薦できるようにして. 7月末までにしておいてね｣</p>
<p>こんなわけで,前に作ったサイトの見た目をとかを修正するだけだったつもりが, 先生からのお願い(?)で推薦対象となるカテゴリーを増やすことになりました.<br />
追加することになったのは浮世絵. 浮世絵のログは抽出してDBに保存していなかったので,もう一度アクセスログの解析をすることになりました. クローラなどのログはすでに落としてあるのがあったと思うので,そこからもう一度.</p>
<p><Font color="red">I Love PHP</font> なのでもちろんPHPを使います. スクレイピングもPHPです. スクレイピングのコードも前まではクラスを作ってそれを使っていただけだったのですが, 今回はComposerでインストールして使えるようにして公開したいと思います.</p>
<p>実行環境は,今日,研究室に立てたUbuntu Serverを使おうかなと. 開発段階では研究室のみからアクセスできるようにしておけばいい. オープンキャンパスの時のみ,大学のIPだけを通すようにするとか考えたが... 前回と同様にデータを先生に渡すだけになるのかな</p>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>Saori v0.3を作った</title>
<link href="/article/2016/04/261251"></link>
<id>urn:uuid:4352bc72-9893-69fd-374b-aa57f31f3822</id>
<updated>2016-04-26T12:51:20+09:00</updated>
<summary type="html"><![CDATA[<p>Saoriにいくつか機能を加えた.</p>
<h2>v0.2</h2>
<p>v0.2ではフィード(/feed.atom)を生成するようにしたり,簡単なタグ機能を加えた.</p>
<h2>v0.3</h2>
<p>v0.3では機能の追加ではなく,コードを分けたり修正したりした.あと生成する際に使用するtwigファイルの場所を変更したので,v0.2からv0.3でテーマの互換性がないですが,sampleテーマは直した.</p>
<h2>v0.4でしたいこと</h2>
<p>v0.4ではconfig.jsonの場所をcontentsの中にしたい. あとinitでconfig.jsonファイルの生成も. 機能としてはテーマが設定したページを作れるようにしたり,ユーザがMarkdownファイルを作るだけで設定されたテンプレートからページを生成できるようにしたい.  </p>
<hr />
<p>現在アクセスできるのは</p>
<ul>
<li>/page/:page_number</li>
<li>/article/:year/:month/:title</li>
<li>/tag</li>
<li>/tag/:tag_name/:page_number</li>
</ul>
]]></summary>
</entry>
<entry>
<author><name>Yuya Aratani</name>
</author>
<title>Saori v0.1.0のリリース</title>
<link href="/article/2016/04/saori"></link>
<id>urn:uuid:776e69e3-34bd-db10-cb23-ce3ac961208d</id>
<updated>2016-04-24T18:53:20+09:00</updated>
<summary type="html"><![CDATA[<h2>Saoriについて</h2>
<p>SaoriというPHPを使った簡単なサイトジェネレータを作りました.現在のバージョンはv0.1.0です.これで,PHP動かない場所(たとえばusername.github.io)でもブログを公開できます. 仕組みとしてはローカルでPHPを使ってHTMLを生成して,それを公開するって流れです.<br />
現在,テーマはsampleしかないのです.これでは1ページあたりの記事の数は5つとなっています.
使い方は<a href="https://github.com/hrgruri/saori">GitHub</a>で.まだまだ開発途中で,追加したい機能がいくつかあるのでがんばります.  </p>
<pre><code class="language-sh">composer install hrgruri/saori
</code></pre>
<h3>機能</h3>
<ul>
<li>各記事用のページの生成(/article/:year/:month/title)</li>
<li>記事(N件)ごとのページを生成(/page/:page_number)</li>
</ul>
<h3>予定</h3>
<p>各記事に対する設定でタグの欄があるのですが,Saoriの機能ではタグ一覧取得,タグ用のページの生成がないので,タグ機能を加えようと思います.<br />
フィード機能(ATOM/RSS)がまだできていないので,それもできればいいかなと思っています.</p>
<hr />
<p>プログラムの話は全くしていないので,それに関しては近いうちに別の記事でします.</p>
]]></summary>
</entry>
</feed>